/**
 * Created by tholly on 10/24/2015.
 */

/* State, Store Array */

var riStores = [
    {'state':'Alabama','abbrev':'AL','stores':[
        {'city':'Huntsville','storeNumber':69}
    ]},
    {'state':'Alaska','abbrev':'AK','stores':[
        {'city':'Anchorage','storeNumber':52}
    ]},
    {'state':'Arizona','abbrev':'AZ','stores':[
        {'city':'Glendale','storeNumber':15}
    ]},
    {'state':'Arkansas','abbrev':'AR','stores':[
        {'city':'Rogers','storeNumber':38}
    ]},
    {'state':'Colorado','abbrev':'CO','stores':[
        {'city':'Grand Junction','storeNumber':33},
        {'city':'Lone Tree','storeNumber':47},
        {'city':'Thornton','storeNumber':46}
    ]},
    {'state':'Connecticut','abbrev':'CT','stores':[
        {'city':'East Hartford','storeNumber':23}
    ]},
    {'state':'Delaware ','abbrev':'DE','stores':[
        {'city':'Christiana','storeNumber':53}
    ]},
    {'state':'Georgia','abbrev':'GA','stores':[
        {'city':'Acworth','storeNumber':57},
        {'city':'Augusta','storeNumber':50},
        {'city':'Fort Oglethorpe','storeNumber':67}
    ]},
    {'state':'Idaho','abbrev':'ID','stores':[
        {'city':'Ammon','storeNumber':66},
        {'city':'Boise','storeNumber':19},
        {'city':'Post Falls','storeNumber':25}
    ]},
    {'state':'Illinois','abbrev':'IL','stores':[
        {'city':'Hoffman Estates','storeNumber':21}
    ]},
    {'state':'Indiana','abbrev':'IN','stores':[
        {'city':'Hammond','storeNumber':24},
        {'city':'Noblesville','storeNumber':68}
    ]},
    {'state':'Kansas','abbrev':'KS','stores':[
        {'city':'Kansas City','storeNumber':8},
        {'city':'Wichita','storeNumber':36}
    ]},
    {'state':'Kentucky','abbrev':'KY','stores':[
        {'city':'Bowling Green','storeNumber':61},
        {'city':'Louisville','storeNumber':44}
    ]},
    {'state':'Louisiana','abbrev':'LA','stores':[
        {'city':'Gonzales','storeNumber':16}
    ]},
    {'state':'Maine','abbrev':'ME','stores':[
        {'city':'Scarborough','storeNumber':28}
    ]},
    {'state':'Massachusetts','abbrev':'MA','stores':[
        {'city':'Berlin','storeNumber':63}
    ]},
    {'state':'Michigan','abbrev':'MI','stores':[
        {'city':'Dundee','storeNumber':7},
        {'city':'Grandville','storeNumber':43},
        {'city':'Saginaw','storeNumber':41}
    ]},
    {'state':'Minnesota','abbrev':'MN','stores':[
        {'city':'East Grand Forks','storeNumber':5},
        {'city':'Owatonna','storeNumber':3},
        {'city':'Rogers','storeNumber':14},
        {'city':'Woodbury','storeNumber':54}
    ]},
    {'state':'Missouri','abbrev':'MO','stores':[
        {'city':'Hazelwood','storeNumber':20}
    ]},
    {'state':'Montana','abbrev':'MT','stores':[
        {'city':'Billings','storeNumber':32},
        {'city':'Kalispell','storeNumber':49},
        {'city':'Missoula','storeNumber':55}
    ]},
    {'state':'Nebraska','abbrev':'NE','stores':[
        {'city':'Kearney','storeNumber':2},
        {'city':'LaVista','storeNumber':17},
        {'city':'Sidney','storeNumber':1}
    ]},
    {'state':'Nevada','abbrev':'NV','stores':[
        {'city':'Reno','storeNumber':22}
    ]},
    {'state':'New York','abbrev':'NY','stores':[
        {'city':'Cheektowaga','storeNumber':58}
    ]},
    {'state':'North Carolina','abbrev':'NC','stores':[
        {'city':'Garner','storeNumber':64}
    ]},
    {'state':'Ohio','abbrev':'OH','stores':[
        {'city':'Columbus','storeNumber':42},
        {'city':'West Chester','storeNumber':70}
    ]},
    {'state':'Oklahoma','abbrev':'OK','stores':[
        {'city':'Oklahoma City','storeNumber':71}
    ]},
    {'state':'Oregon','abbrev':'OR','stores':[
        {'city':'Springfield','storeNumber':34},
        {'city':'Tualatin','storeNumber':59}
    ]},
    {'state':'Pennsylvania','abbrev':'PA','stores':[
        {'city':'Hamburg','storeNumber':9}
    ]},
    {'state':'South Carolina','abbrev':'SC','stores':[
        {'city':'Fort Mill','storeNumber':62},
        {'city':'Greenville','storeNumber':51}
    ]},
    {'state':'South Dakota','abbrev':'SD','stores':[
        {'city':'Mitchell','storeNumber':6},
        {'city':'Rapid City','storeNumber':27}
    ]},
    {'state':'Texas','abbrev':'TX','stores':[
        {'city':'Allen','storeNumber':35},
        {'city':'Buda','storeNumber':12},
        {'city':'Fort Worth','storeNumber':11},
        {'city':'Lubbock','storeNumber':56},
        {'city':'Waco','storeNumber':48}
    ]},
    {'state':'Utah','abbrev':'UT','stores':[
        {'city':'Lehi','storeNumber':13}
    ]},
    {'state':'Virgina','abbrev':'VA','stores':[
        {'city':'Bristol','storeNumber':60}
    ]},
    {'state':'Washington','abbrev':'WA','stores':[
        {'city':'Lacey','storeNumber':26},
        {'city':'Tulalip','storeNumber':37},
        {'city':'Union Gap','storeNumber':40}
    ]},
    {'state':'West Virgina','abbrev':'WV','stores':[
        {'city':'Charleston','storeNumber':39},
        {'city':'Wheeling','storeNumber':10}
    ]},
    {'state':'Wisconsin','abbrev':'WI','stores':[
        {'city':'Green Bay','storeNumber':45},
        {'city':'Prairie du Chien','storeNumber':4},
        {'city':'Richfield','storeNumber':18},
        {'city':'Sun Prairie','storeNumber':65}
    ]}
];

function selectedIndex(abbrev, storeId) {
    var result = new Array();
    for (ii=0;ii<riStores.length;ii++) {
        if (riStores[ii].abbrev == abbrev) {
            result.push(ii);

            for (jj=0;jj<riStores[ii].stores.length;jj++) {
                if (riStores[ii].stores[jj].storeNumber == storeId) {
                    result.push(jj);

                    break;
                }
            }

            break;
        }
    }

    return result;
}

var DXD = {
    getCookie: function (name) {
        var start = document.cookie.indexOf(name + '=');
        if (start < 0) {
            return null;
        }
        start = start + name.length + 1;
        var end = document.cookie.indexOf(';', start);
        if (end < 0) {
            end = document.cookie.length;
        }
        while (document.cookie.charAt(start) == ' ') {
            start++;
        }
        return unescape(document.cookie.substring(start, end));
    }
}

$(document).ready(function(){
    riExecute();
});

function riExecute() {

    /*Changing Verbiage per UX*/
    $('a.js-genericPopup1').each(function(index){
        if ($(this).text() == "Check Availability") {
            $(this).text("Check Online Availability");
        }
    });

    $('span.stock-status').each(function(index){
        if ($(this).text() == "In Stock") {
            $(this).text("In Stock Online");
        }
    });

    /*if it's dropship, do not show*/
    if (typeof $('div.stockMessage div.availabilityMessage').html() != 'undefined'
        && $('div.stockMessage div.availabilityMessage').html().indexOf('Ships Directly from Manufacturer') >= 0) {

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'Drop Ship' ,'Product Id', commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'Drop Ship' ,'Product Id']);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

        return;
    }

    /*if there's no add to cart, don't show */
    if ($('input.btnAddToCart:submit').length == 0
        && $('#pdp-cart-buttons input:submit').length == 0 && $('div.pdp-cart-buttons input:submit').length == 0) {

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'No Add To Cart', 'Product Id', commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'No Add To Cart', 'Product Id']);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

        return;
    }

    /* is it mobile? */
    if (commonDataLayer.tm_Dvc_Typ_Cd == 'mobile') {

        $('div.pdp-learnmore').before('<div id="retailInventory" style="height: 55px;">\
                    <div style="border-top: 1px solid #dbd9d4;padding: 10px 10px 10px 10px;">\
                    <div><span id="riHeader">Check In-Store Availability:</span>\
                    <div id="riSelectSku" hidden>\
                    <img src="/assets/retail-inventory/RI_asset_store_mobile_options.png" style="float: left;max-width: 20%; margin: 6px 2%;">\
                    <div style="max-width: 75%;float:left; margin:5px 0;"><span style="font-weight: bold">To view in-store availability,</span> please make a selection for all options above.</div>\
                    </div>\
                    <div id="riSelectStore" style="float:left;margin-bottom:5px">\
                    <select id="riStatesSelect" style="font-size: 3.5vw; width: 39%;" >\
                            <option value="" disabled selected hidden>Select STATE</option>\
                    </select>\
                    <img src="/assets/retail-inventory/RI_asset_store_mobile.png" style="float: left;max-width: 15%; margin: 6px 2%;">\
                    <select id="riStoresSelect" style="font-size: 3.5vw; width: 39%;" disabled>\
                    <option value="" disabled selected hidden>Select STORE</option>\
                    </select>\
                    </div></div></div>\
                    <div id="riChangeStore" hidden>\
                    <img src="/assets/retail-inventory/RI_asset_store_mobile.png" style="float: left;max-width: 20%; margin: 1px 4%;">\
                    <div style="font-family: Arial; font-weight: bold; color: #686a54; max-width: 75%;float:left;margin-bottom:5px">\
                    <span id="riStockStatus"></span><span class="At"> at </span><a id="riSelectedStore" class="selectedStore"></a><br>\
                    <a id="riChangeStoreA" href="#" style="color:#686a54">Change Store</a>\
                    </div></div></div>');

    }
    else
    /* see if the is a chart or a selection */
    if ($('#productChart').length > 0) {
        /* chart */
        $('#productChart table thead tr:first').after('<tr><th colspan="100" style="color: black;background: white;"><div id="riSelectStore">\
                    <img src="/assets/retail-inventory/RI_asset_store_dsk_chart_black.png" style="float: left;margin-left: 5px;margin-right:5px">\
                    <div style="padding-top: 7px;">\
                    <span style="font-style: italic">Check if this item is in stock locally</span>\
                    <select id="riStatesSelect" >\
                            <option value="" disabled selected hidden>Choose State</option>\
                    </select>\
                    <select id="riStoresSelect" disabled>\
                    <option value="">Choose Store</option>\
                    </select>\
                    </div>\
                    </div>\
                    <div id="riChangeStore" style="float:left" hidden>\
                    <img src="/assets/retail-inventory/RI_asset_store_dsk_upper.png" style="float: left;margin-left: 5px;margin-right:8px">\
                    <div style="width: 500px;"><span class="instock">Viewing in-store inventory for:</span> <a style="font-size: 14px;" id="riSelectedStore" class="selectedStore"></a></div> \
                    <a id="riChangeStoreA" href="#">Change Store</a>\
                    </div></div></th></tr>');

    } else {

        if ($('div.bottomNote').length == 0) {

            if (typeof ga != "undefined") {
                try {
                    ga('send', 'event', 'Retail Inventory', 'Drop Ship' ,'Product Id', commonDataLayer.tm_E_Prod_Id);
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            } else if (typeof _gaq !== "undefined") {
                try {
                    _gaq.push(['_trackEvent', 'Retail Inventory', 'Drop Ship' ,'Product Id']);
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            }

            return;
        }

        /* single sku or drop down */
        $('div.bottomNote').after('<div id="retailInventory" style="margin:10px;height: 55px;">\
                    <div><span id="riHeader">Check In-Store Availability:</span>\
                    <div style="margin-top: 5px;">\
                    <div id="riSelectSku" style="display: none">\
                    <img src="/assets/retail-inventory/RI_asset_store_dsk_upper_options.png" style="float: left;margin-left: 5px;margin-top: 1px;margin-right:10px">\
                    <div style="width: 215px;float:left;margin-bottom:5px;"><span style="font-weight: bold">To view in-store availability,</span> please make a selection for all options above.\
                    </div></div>\
                    <div id="riSelectStore" style="display: none"><img src="/assets/retail-inventory/RI_asset_store_dsk_upper.png" style="float: left;margin-left: 5px;margin-top: 1px;margin-right:10px">\
                    <div style="float:left;margin-bottom:5px">\
                    <select id="riStatesSelect" >\
                            <option value="" disabled selected hidden>Choose State</option>\
                    </select>\
                    \
                    <select id="riStoresSelect" disabled>\
                    <option value="">Choose Store</option>\
                    </select>\
                    </div></div>\
                    </div>\
                    <div id="riChangeStore" style="display: none;"><img src="/assets/retail-inventory/RI_asset_store_dsk_upper.png" style="float: left;margin-left: 5px;margin-top: 1px;margin-right:10px">\
                    <div style="font-family: "Arial Bold";font-size: 12px;color: #000000;">\
                    <span id="riStockStatus"></span> at <a id="riSelectedStore"  class="selectedStore"></a><br>\
                    <a id="riChangeStoreA" href="#">Change Store</a>\
                    </div></div>');
    }

    /* load the states from the store array */
    for(ii=0;ii < riStores.length ;ii++) {
        $('#riStatesSelect').append($("<option></option>")
            .attr("value",ii)
            .text(riStores[ii].state));
    }

    var lastVarId = 0;
    //see if we are on a mobile dd but non-chart page
    if (commonDataLayer.tm_Dvc_Typ_Cd == 'mobile' && $('select.variantSel:visible').length > 0) {
        //so sloppy/full of noise but it is what it is
        //mobile bind for the select create destroy magic
        $('#productAttrs').bind('DOMSubtreeModified', function (e) {
            var thedds = $('select.variantSel:visible');

            if (!riDropdownReady(thedds)) {
                $('#riChangeStore').hide();
                $('#riSelectSku').show();
                $('#riSelectStore').hide();
                lastVarId = 0;
            } else {
                $('#riSelectSku').hide();

                if (e.target.innerHTML.length > 0) {
                    var nextVarId = $('#productVariantId').val();

                    if (lastVarId != nextVarId && nextVarId != 0) {
                        riDropdownClicked(thedds, false);
                        lastVarId = nextVarId;
                    }
                }
            }
        });

    } else if (commonDataLayer.tm_Dvc_Typ_Cd == 'mobile' && $('select.variantSelComplex').length > 0) {
        //mobile bind for super phun tyme chart
        $('div.product-attributes').bind('DOMSubtreeModified', function (e) {
            var thedds = $('select.variantSelComplex');

            if (!riDropdownReady(thedds)) {
                $('#riChangeStore').hide();
                $('#riSelectSku').show();
                $('#riSelectStore').hide();
                lastVarId = 0;
            } else {
                $('#riSelectSku').hide();

                if (e.target.innerHTML.length > 0) {
                    var nextVarId = $('#productVariantId').val();

                    if (lastVarId != nextVarId && nextVarId != 0) {
                        riDropdownClicked(thedds, false);
                        lastVarId = nextVarId;
                    }
                }
            }
        });
    } else {
        //good olde desktop (not very dry...)
        //desktop bind for the selection changing programatically after the manual desktop code runs
        $('div.variantConfigurator').bind('DOMSubtreeModified', function(e) {
            var thedds = $('.js-dropdown');

            if (!riDropdownReady(thedds)) {
                $('#riChangeStore').hide();
                $('#riSelectSku').show();
                $('#riSelectStore').hide();
                lastVarId = 0;
            } else {
                $('#riSelectSku').hide();

                var nextVarId = $('input.js-selectedInput').val();

                if (lastVarId != nextVarId && nextVarId != 0) {
                    riDropdownClicked(thedds, false);
                    lastVarId = nextVarId;
                }
            }

        });
    }


    $('.js-dropdown').change(function(){
        var thedds = $('.js-dropdown');

        if (riDropdownReady(thedds)) {
            $('#riSelectSku').hide();

            var nextVarId = $('input.js-selectedInput').val();

            if (lastVarId != nextVarId && nextVarId != 0) {
                riDropdownClicked(thedds, false);
                lastVarId = nextVarId;
            }
        }

    });

    /* if this is a drop down show the configure message */
    if ($('select.js-dropdown').length > 0 || $('select.variantSel:visible').length > 0 || $('select.variantSelComplex').length > 0) {
        $('#riSelectStore').hide();
        $('#riSelectSku').show();
    }

    /* when someone selects a state, load the store select */
    $('#riStatesSelect').change(function(){
        $('#riStoresSelect').prop( "disabled", false );
        $('#riStoresSelect').find('option').remove().end();
        $('#riStoresSelect').append('<option value="" disabled selected hidden>Choose Store</option>');

        var storeId = $('#riStatesSelect option:selected').attr("value");

        for(ii=0 ;ii < riStores[storeId].stores.length ;ii++) {
            $('#riStoresSelect').append($("<option></option>")
                .attr("value",ii)
                .text(riStores[storeId].stores[ii].city));
        }

        if ($('#riStoresSelect option').length == 2) {
            $('#riStoresSelect option:eq(1)').attr('selected', true);
            $('#riStoresSelect').trigger('change');
        }
    });

    /* when someone selects a store, show them the status of the sku */
    $('#riStoresSelect').change(function() {
        var stateid=$('#riStatesSelect option:selected').attr("value");
        var storeid=$('#riStoresSelect option:selected').attr("value");
        riDisplayChange(stateid,storeid);
        var ricookie = DXD.getCookie('ristore');
        if (ricookie==null || ricookie.indexOf(riStores[stateid].abbrev+","+riStores[stateid].stores[storeid].storeNumber) < 0) {
            var ridata = ['','',''];

            if (ricookie!=null) {
                ridata = ricookie.split(",");
            }

            //in case it's an old cookie
            while (ridata.length < 3){
                ridata.push('');
            }

            //has this store been sent to wt?
            if (ridata[2].indexOf("|" + riStores[stateid].stores[storeid].storeNumber + "|") < 0) {

                //well now it has!
                ridata[2] = ridata[2] + "|" + riStores[stateid].stores[storeid].storeNumber + "|";

                //call webtrends
                if (typeof dcsMultiTrack !== "undefined") {
                    try {
                        dcsMultiTrack('DCS.dcsuri', window.location, 'WT.ti', 'Retail_Inventory', 'WT.dl', '40', 'WT.z_st', 'Change_Store', 'WT.z_stn', riStores[stateid].stores[storeid].storeNumber);
                    } catch (wterror) {
                        if (typeof console !== 'undefined') {
                            console.log("WT failed " + wterror);
                        }
                    }
                }
            }

            if (typeof ga != "undefined") {
                try {
                    ga('send', 'event', 'Retail Inventory', 'set store', 'store number', riStores[stateid].stores[storeid].storeNumber);
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            } else if (typeof _gaq !== "undefined") {
                try {
                    _gaq.push(['_trackEvent', 'Retail Inventory', 'set store', 'store number'])
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            }

            document.cookie = "ristore="+riStores[stateid].abbrev + ","+ riStores[stateid].stores[storeid].storeNumber + "," + ridata[2] + ";path=/";
        }
    });

    /* they've asked to change the store they are looking at */
    $('#riChangeStoreA').click(function(e){
        e.stopPropagation();
        e.preventDefault();

        $('div.chartStockStatus').remove();

        $('#riSelectStore').show();
        $('#riChangeStore').hide();
        $('#riSelectSku').hide();

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'change store', 'clicked');
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'change store', 'clicked']);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

    });

    /* for non-dropdowns, if there's a cookie, get the sku status */
    if ($('select.js-dropdown').length == 0  || $('select.variantSel:visible').length == 0 || $('select.variantSelComplex').length > 0)
    {
        //assume failure
        var ready = false;

        if (commonDataLayer.tm_Dvc_Typ_Cd == 'mobile') {
            if ($('select.variantSel:visible').length > 0) {
                ready = riDropdownReady($('select.variantSel:visible'));
            }else {
                ready = riDropdownReady($('select.variantSelComplex'));
            }
        } else {
            ready = riDropdownReady($('select.js-dropdown'));
        }

        if (ready) {
            var ricookie = DXD.getCookie('ristore');
            if (ricookie != null && ricookie != "") {
                //the choice has been made

                var ridata = ricookie.split(",");
                //translate from abbrev, store to selected indexes
                ridata = selectedIndex(ridata[0], ridata[1]);

                //go on and make that change
                riDisplayChange(ridata[0], ridata[1]);
            } else {
                //we are ready but have no store selected
                $('#riSelectStore').show();
                $('#riChangeStore').hide();
                $('#riSelectSku').hide();
            }
        } else {
            //drop downs need to be configured first
            $('#riSelectStore').hide();
            $('#riChangeStore').hide();
            $('#riSelectSku').show();
        }
    }
}

function riDropdownReady(numOfDD) {
    var ready = false;

    if (typeof variantJSON != "undefined") {
        //this is the mobile model
        var vc = 0;
        var vj = variantJSON.options[0];
        var found = false;

        do {
            vc++;
            found = false;

            for (name in vj) {
                if (vj.hasOwnProperty(name)) {
                    if (typeof vj[name].options != "undefined") {
                        found = true;
                        vj = vj[name].options[0];
                    } else {
                        found = false;
                    }

                    break;
                }
            }

        } while (found);

        var realDDCount = 0;
        if ($(numOfDD[0]).attr('data-level').length > 0) {
            //determine real count as two dropdowns can exist at once cause you know that's really cool... /sigh
            var lastDataLevel = '';
            for (ii = 0; ii < numOfDD.length; ii++) {
                var thisValue =  $(numOfDD[ii]).attr('data-level');
                if (lastDataLevel != thisValue && $(numOfDD[ii]).val() != null && $(numOfDD[ii]).val().length > 0
                    && $(numOfDD[ii]).val() != "0") {
                    lastDataLevel = thisValue;
                    realDDCount++;
                }
            }
        } else {

            for (ii = 0; ii < numOfDD.length; ii++) {
                if ($(numOfDD[ii]).val().length > 0 && $(numOfDD[ii]).val() != "0") {
                    realDDCount = numOfDD.length;
                }
            }
        }

        //vc is now the number of options/dropdowns there needs to be to be ready
        if (realDDCount == vc) {
            ready = true;
        }

    } else {
        ready = true;
    }

    if (ready) {
        for (ii = 0; ii < numOfDD.length; ii++) {

            if ($(numOfDD[ii]).val() == null || $(numOfDD[ii]).val().length == 0) {

                if ($(numOfDD[ii]).val() == null || $(numOfDD[ii]).val() == "0" || $(numOfDD[ii]).val() == "" || numOfDD[ii].length < 2) {
                    ready = false;
                    break;
                }

            }
        }
    }

    return ready;
}

function riDropdownClicked(numOfDD,hasHeaderAt0){

    var ready = riDropdownReady(numOfDD);
    var selectedValues = new Array();

    //get selected values
    for (ii=0;ii<numOfDD.length;ii++) {

        if ($(numOfDD[ii]).val() == null) {
            ready = false;
            break;
        }

        if ($(numOfDD[ii]).val().length == 0) {

            //see if there is just one with the label
            if (numOfDD[ii].length > 2) {
                ready = false;
                break;
            } else {
                selectedValues.push($(numOfDD[ii][1]).val());
            }

        } else {
            selectedValues.push($(numOfDD[ii]).val());
        }
    }

    if (ready) {
        $('#riSelectSku').hide();

        var ricookie = DXD.getCookie('ristore');
        if (ricookie != null && ricookie != "") {
            var ridata = ricookie.split(",");

            //translate from abbrev, store to selected indexes
            ridata = selectedIndex(ridata[0], ridata[1]);

            riDisplayChange(ridata[0], ridata[1],selectedValues);
        } else {
            $('#riSelectStore').show();
            $('#riChangeStore').hide();
            $('#riSelectSku').hide();
        }

    } else {
        $('#riSelectStore').hide();
        $('#riChangeStore').hide();
        $('#riSelectSku').show();
    }
}

function riDisplayChange(stateId,storeId,selectedValues){

    if (!riDropdownReady($('select.variantSel:visible'))) {
        return;
    }

    var riState = riStores[stateId].abbrev;
    var riStoreCity = riStores[stateId].stores[storeId].city;
    var storeNumber = riStores[stateId].stores[storeId].storeNumber;

    var selectedVariant = null;
    var savedVariant = null;
    var isChart = $('#productChart').length > 0;

    if (!isChart) {
        if (typeof selectedValues != "undefined") {

            var stupidArrayOfVariants = null;

            if (typeof ddWidgetEntries != "undefined") {
                for (name in ddWidgetEntries) {
                    if (ddWidgetEntries.hasOwnProperty(name)) {
                        stupidArrayOfVariants = ddWidgetEntries[name];
                        break;
                    }
                }

                if (stupidArrayOfVariants != null) {

                    for (ii=0;ii < stupidArrayOfVariants.length;ii++) {
                        var found = 0;
                        var varVals = stupidArrayOfVariants[ii].values;
                        for (jj=0;jj<selectedValues.length;jj++) {
                            if (varVals[jj] == selectedValues[jj]){
                                found += 1;
                            }
                        }

                        if (found == selectedValues.length) {
                            selectedVariant = stupidArrayOfVariants[ii].id;
                            break;
                        }
                    }

                } else {
                    return;
                }
            } else {
                // does it contain a different model cause... it can?
            }
        } else if (typeof(selected) != 'undefined') {
            selectedVariant = $(selected).val();
        } else {
            selectedVariant = $('input[name=productVariantId]').val();
        }

        savedVariant = selectedVariant;

        if (selectedVariant != "" && typeof webtrendsVariantAttributes !== "undefined") {
            selectedVariant = webtrendsVariantAttributes[selectedVariant].sku;
        } else if (selectedVariant != "" && typeof map !== "undefined") {
            selectedVariant = map[selectedVariant].split("|")[0];
        } else {
            selectedVariant = null;
        }
    } else {
        $('div.chartStockStatus').remove();
    }

    $('#riSelectedStore').html(riStoreCity + ", " + riState);
    var storeid3 = "" + storeNumber;
    while (storeid3.length < 3) {
        storeid3 = "0" + storeid3;
    }
    $('#riSelectedStore').attr('href','/stores/store_info.jsp?pageName='+storeid3);
    $('#riStockStatus').html("...Checking...");
    $('#riChangeStore').show();
    $('#riSelectStore').hide();


    var riUrl =  $('input.js-selectedInput').length == 0 ? '/services/inventory/' + dataLayer.tm_Media_Set_Id[0] + '/' + storeNumber + '.do?docMode=MEDIUM' :
    '/services/inventory/' + dataLayer.tm_Media_Set_Id[0] + '/' + storeNumber + '/' + selectedVariant + '.do?docMode=MEDIUM';

    if (selectedVariant == null && $('#productVariantId').length > 0) {
        selectedVariant = $('#productVariantId').val();

        riUrl = '/services/inventory/' + dataLayer.tm_Media_Set_Id[0] + '/' + storeNumber + '.do?variantId=' + selectedVariant + '&docMode=MEDIUM';
        selectedVariant = null;
    }

    $.ajax({
        url      : riUrl,
        dataType : "json",
        headers: {"Content-Type": "application/json",
            "Accept": "application/json"},
        async: false
    }).done(function(responseData){

        if (responseData.messages.status == "FAILED") {
            epicFailure(responseData.messages);
            return;
        }

        if (responseData.messages.status == "WARNING" && responseData.messages.description.length > 1
            && responseData.messages.description[1] == "Sorry.  No inventory information is available for this product."){
            epicFailure(responseData.messages);
            return;
        }

        if (selectedVariant == null) {
             if (responseData.dataset.datasetResponse.value["SKU Availability"].length == '1') {
                selectedVariant = responseData.dataset.datasetResponse.value["SKU Availability"][0].skuId;
            } else {
                selectedVariant = "";
            }
        }

        if ($('#productChart').length > 0) {
            riChartSku(responseData);
        } else if ($('select.js-dropdown').length > 0 || $('select.variantSel:visible').length > 0 || $('select.variantSelComplex').length > 0) {
            riDropDownSku(responseData,selectedVariant,savedVariant);
        } else
        {
            riSingleSku(responseData,selectedVariant,savedVariant);
        }

    }).fail(function(errorData) {
        epicFailure(errorData);
    });

}

function epicFailure(errorData) {


    if ($('#productChart').length > 0) {
        $('#productChart tbody tr').find('td:last').append("<div class='chartStockStatus'><img src='//www.cabelas.com/assets/retail-inventory/RI_asset_store_dsk_chart_gray.png'>" +
            "<span class='anerror'>Status Unavailable</span></div>");
    } else {
        $('#riChangeStore').show();
        $('#riSelectSku').hide();
        $('#riStockStatus').html("Status Unavailable").attr('class', 'anerror');
    }

    if (typeof ga != "undefined") {
        try {
            ga('send', 'event', 'Retail Inventory', 'Error', errorData);
        } catch (gaerror) {
            if (typeof console !== 'undefined') {
                console.log("GA failed " + gaerror);
            }
        }
    } else if (typeof _gaq !== "undefined") {
        try {
            _gaq.push(['_trackEvent', 'Retail Inventory', 'Error', errorData]);
        } catch (gaerror) {
            if (typeof console !== 'undefined') {
                console.log("GA failed " + gaerror);
            }
        }
    }

    if (typeof console !== 'undefined' && typeof errorData !== 'undefined') {
        console.log(errorData);
    }
}

function riStatus(message) {
    return message == 'In Stock' ? 'instock' : message == 'Limited Stock' ? 'limitedstock' : 'outofstock';
}

function riChartSku(responseData){

    if (responseData.messages.status == "FAILED") {
        $('#riStockStatus').html("Status Unavailable").attr('class', 'anerror');

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'Error', "status returned failed");
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'Error', "status returned failed"]);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

        return;
    }

    /* is the product suppressed */
    if (dataLayer.tm_Prod_Inv_Flag == "N") {
        $('#riStockStatus').html("Status Unavailable").attr('class', 'anerror');

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'Suppressed Product', "Product Id", commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'Suppressed Product', "Product Id"]);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }
    }

    var lastTdArray = $('#productChart tbody tr').find('td:last');
    var productVariantIdArray = $('input[name="productVariantId"]');
    for(jj=0;jj<productVariantIdArray.length;jj++) {
        productVariantIdArray[jj] = webtrendsVariantAttributes[$(productVariantIdArray[jj]).attr('value')].sku;
    }

    for(ii=0;ii<lastTdArray.length;ii++) {

        var riFound = false;
        var skuResponseArray = responseData.dataset.datasetResponse.value["SKU Availability"];

        for(jj=0;jj<skuResponseArray.length;jj++) {
            if (skuResponseArray[jj].skuId == productVariantIdArray[ii]) {
                var message = skuResponseArray[jj].stockstatus;

                if (message == 'In Stock') {
                    $(lastTdArray[ii]).append("<div class='chartStockStatus'><img src='//www.cabelas.com/assets/retail-inventory/RI_asset_store_dsk_chart_green.png'>" +
                        "<span class='instock'>In Stock</span></div>");
                }
                else if (message == 'Limited Stock') {
                    $(lastTdArray[ii]).append("<div class='chartStockStatus'><img src='//www.cabelas.com/assets/retail-inventory/RI_asset_store_dsk_chart_orange.png'>" +
                        "<span class='limitedstock'>Limited Stock</span></div>");
                }
                else {
                    $(lastTdArray[ii]).append("<div class='chartStockStatus'><img src='//www.cabelas.com/assets/retail-inventory/RI_asset_store_dsk_chart_red.png'>" +
                        "<span class='outofstock'>Out of Stock</span></div>");
                }


                if (typeof ga != "undefined") {
                    try {
                        ga('send', 'event', 'Retail Inventory', 'stock status', riStatus(message));
                    } catch (gaerror) {
                        if (typeof console !== 'undefined') {
                            console.log("GA failed " + gaerror);
                        }
                    }
                } else if (typeof _gaq !== "undefined") {
                    try {
                        _gaq.push(['_trackEvent', 'Retail Inventory', 'stock status', riStatus(message)]);
                    } catch (gaerror) {
                        if (typeof console !== 'undefined') {
                            console.log("GA failed " + gaerror);
                        }
                    }
                }

                riFound = true;
                break;
            }
        }

        if (!riFound) {
            $(lastTdArray[ii]).append("<div class='chartStockStatus'><img src='//www.cabelas.com/assets/retail-inventory/RI_asset_store_dsk_chart_black.png'>" +
                "<span class='notstocked'>Not Stocked</span></div>");

             if (typeof ga != "undefined") {
                try {
                    ga('send', 'event', 'Retail Inventory', 'stock status', 'notstocked');
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            } else if (typeof _gaq !== "undefined") {
                 try {
                     _gaq.push(['_trackEvent', 'Retail Inventory', 'stock status', 'notstocked']);
                 } catch (gaerror) {
                     if (typeof console !== 'undefined') {
                         console.log("GA failed " + gaerror);
                     }
                 }
             }
        }
    }
}


function riDropDownSku(responseData,selectVal,savedVariant) {
    riSingleSku(responseData,selectVal,savedVariant);
}

function riSingleSku(responseData,selectVal,savedVariant) {

    if (selectVal == null || responseData.messages.status == "FAILED") {
        $('#riStockStatus').html("Status Unavailable").attr('class', 'anerror');

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'Error', "status returned failed", commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'Error', "status returned failed"]);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

        return;
    }

    /* is the product suppressed */
    if (dataLayer.tm_Prod_Inv_Flag == "N") {

        $('#riStockStatus').html("Status Unavailable").attr('class', 'anerror');

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'Suppressed Product' , commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'Suppressed Product']);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }

        return;
    }

    while (selectVal.length < 8 ) {
        selectVal = '0' + selectVal;
    }

    var riFound = false;
    var responseSkuArray = responseData.dataset.datasetResponse.value["SKU Availability"];

    for(ii=0;ii<responseSkuArray.length;ii++) {
        if (responseSkuArray[ii].skuId == selectVal || (typeof responseSkuArray[ii].variantId != "undefined" && responseSkuArray[ii].variantId == savedVariant)) {
            var message = responseSkuArray[ii].stockstatus;

            $('#riStockStatus').html(message).attr('class',riStatus(message));

            if (typeof ga != "undefined") {
                try {
                    ga('send', 'event', 'Retail Inventory', 'stock status', riStatus(message), commonDataLayer.tm_E_Prod_Id);
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            } else if (typeof _gaq !== "undefined") {
                try {
                    _gaq.push(['_trackEvent', 'Retail Inventory', 'stock status', riStatus(message)]);
                } catch (gaerror) {
                    if (typeof console !== 'undefined') {
                        console.log("GA failed " + gaerror);
                    }
                }
            }

            riFound = true;
            break;
        }
    }

    if (!riFound) {
        $('#riStockStatus').html("Not Stocked").attr('class','notstocked');

        if (typeof ga != "undefined") {
            try {
                ga('send', 'event', 'Retail Inventory', 'stock status', 'notstocked', commonDataLayer.tm_E_Prod_Id);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        } else if (typeof _gaq !== "undefined") {
            try {
                _gaq.push(['_trackEvent', 'Retail Inventory', 'stock status', 'notstocked']);
            } catch (gaerror) {
                if (typeof console !== 'undefined') {
                    console.log("GA failed " + gaerror);
                }
            }
        }
    }
}